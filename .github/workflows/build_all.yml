# SPDX-FileCopyrightText: 2020 Intel Corporation
#
# SPDX-License-Identifier: MIT

name: build_all

on:
  push

env:
  WINDOWS_BASEKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/17191/w_BaseKit_b_2021.1.10.2260_offline.exe
  WINDOWS_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/17163/w_HPCKit_b_2021.1.10.2266_offline.exe
  MACOS_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/17230/m_HPCKit_b_2021.1.10.2260.dmg
  WINDOWS_CPP_COMPONENTS: intel.oneapi.win.cpp-compiler
  WINDOWS_FORTRAN_COMPONENTS: intel.oneapi.win.ifort-compiler
  WINDOWS_DPCPP_COMPONENTS: intel.oneapi.win.dpcpp-compiler
  LINUX_CPP_COMPONENTS: intel-oneapi-dpcpp-cpp-compiler-pro
  LINUX_FORTRAN_COMPONENTS: intel-oneapi-ifort
  LINUX_DPCPP_COMPONENTS: intel-oneapi-dpcpp-cpp-compiler
  MACOS_CPP_COMPONENTS: intel.oneapi.mac.cpp-compiler
  MACOS_FORTRAN_COMPONENTS: intel.oneapi.mac.ifort-compiler

jobs:
  build_windows_cpp:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: cache install
      id: cache-install
      uses: actions/cache@v2
      with:
        path: C:\Program Files (x86)\Intel\oneAPI\compiler
        key: install-${{ env.WINDOWS_HPCKIT_URL }}-${{ env.WINDOWS_CPP_COMPONENTS }}-compiler
    - name: install
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/install_windows.bat $WINDOWS_HPCKIT_URL $WINDOWS_CPP_COMPONENTS
    - name: build
      run: scripts/build_windows.bat c++

    # Delete the following if you don't want to save install logs
    - name: Saving install logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: InstallLogs_${{ github.job }}
        path: |
          extract.log
          bootstrapper*
          installer*
        retention-days: 7

  build_windows_fortran:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: cache install
      id: cache-install
      uses: actions/cache@v2
      with:
        path: C:\Program Files (x86)\Intel\oneAPI\compiler
        key: install-${{ env.WINDOWS_HPCKIT_URL }}-${{ env.WINDOWS_FORTRAN_COMPONENTS }}-compiler
    - name: install
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/install_windows.bat $WINDOWS_HPCKIT_URL $WINDOWS_FORTRAN_COMPONENTS
    - name: build
      run: scripts/build_windows.bat fortran

    # Delete the following if you don't want to save install logs
    - name: Saving install logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: InstallLogs_${{ github.job }}
        path: |
          extract.log
          bootstrapper*
          installer*
        retention-days: 7

  build_windows_dpcpp:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: cache install
      id: cache-install
      uses: actions/cache@v2
      with:
        path: |
          C:\Program Files (x86)\Intel\oneAPI\compiler
          C:\Program Files (x86)\Intel\oneAPI\tbb
          C:\Windows\System32\OpenCL.dll
        key: install-${{ env.WINDOWS_BASEKIT_URL }}-${{ env.WINDOWS_DPCPP_COMPONENTS }}-compiler-tbb-opencl
    - name: install
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/install_windows.bat $WINDOWS_BASEKIT_URL $WINDOWS_DPCPP_COMPONENTS
    - name: build
      run: scripts/build_windows.bat dpc++

    # Delete the following if you don't want to save install logs
    - name: Saving install logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: InstallLogs_${{ github.job }}
        path: |
          extract.log
          bootstrapper*
          installer*
        retention-days: 7

  build_linux_apt_cpp:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: setup apt repo
      run: scripts/setup_apt_repo_linux.sh
    - name: collect versioned dependencies of apt packages
      run: scripts/apt_depends.sh $LINUX_CPP_COMPONENTS | tee depends.txt
    - name: cache install
      id: cache-install
      uses: actions/cache@v2
      with:
        path: |
          /opt/intel/oneapi/compiler
          !/opt/intel/oneapi/compiler/**/linux/compiler/lib/ia32_lin
          !/opt/intel/oneapi/compiler/**/linux/bin/ia32
          !/opt/intel/oneapi/compiler/**/linux/lib/emu/
          !/opt/intel/oneapi/compiler/**/linux/lib/oclfpga/
        key: test-${{ env.LINUX_CPP_COMPONENTS }}-${{ hashFiles('**/depends.txt') }}-compiler-reduced-1
    - name: install
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/install_linux_apt.sh $LINUX_CPP_COMPONENTS
    - name: build
      run: scripts/build_linux.sh c++

  build_linux_apt_fortran:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: setup apt repo
      run: scripts/setup_apt_repo_linux.sh
    - name: collect versioned dependencies of apt packages
      run: scripts/apt_depends.sh $LINUX_FORTRAN_COMPONENTS | tee depends.txt
    - name: cache install
      id: cache-install
      uses: actions/cache@v2
      with:
        path: |
          /opt/intel/oneapi/compiler
          !/opt/intel/oneapi/compiler/**/linux/compiler/lib/ia32_lin
          !/opt/intel/oneapi/compiler/**/linux/bin/ia32
        key: test-${{ env.LINUX_FORTRAN_COMPONENTS }}-${{ hashFiles('**/depends.txt') }}-compiler-reduced-1
    - name: install
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/install_linux_apt.sh $LINUX_FORTRAN_COMPONENTS
    - name: build
      run: scripts/build_linux.sh fortran

  build_linux_apt_dpcpp:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: setup apt repo
      run: scripts/setup_apt_repo_linux.sh
    - name: collect versioned dependencies of apt packages
      run: scripts/apt_depends.sh $LINUX_DPCPP_COMPONENTS | tee depends.txt
    - name: cache install
      id: cache-install
      uses: actions/cache@v2
      with:
        path: |
          /opt/intel/oneapi/compiler
          /opt/intel/oneapi/tbb
          !/opt/intel/oneapi/compiler/**/linux/compiler/lib/ia32_lin
          !/opt/intel/oneapi/compiler/**/linux/bin/ia32
          !/opt/intel/oneapi/compiler/**/linux/lib/emu/
          !/opt/intel/oneapi/compiler/**/linux/lib/oclfpga/
        key: test-${{ env.LINUX_DPCPP_COMPONENTS }}-${{ hashFiles('**/depends.txt') }}-compiler-tbb-reduced-1
    - name: install
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/install_linux_apt.sh $LINUX_DPCPP_COMPONENTS
    - name: build
      run: scripts/build_linux.sh dpc++

  build_linux_container_cpp:
    runs-on: ubuntu-20.04
    container: intel/oneapi-hpckit
    steps:
      - uses: actions/checkout@v2
      - name: install_git
        run: apt update && apt install -y git
      - name: build
        run: scripts/build_linux.sh c++

  build_linux_container_fortran:
    runs-on: ubuntu-20.04
    container: intel/oneapi-hpckit
    steps:
      - uses: actions/checkout@v2
      - name: install_git
        run: apt update && apt install -y git
      - name: build
        run: scripts/build_linux.sh fortran

  build_linux_container_dpcpp:
    runs-on: ubuntu-20.04
    container: intel/oneapi-basekit
    steps:
      - uses: actions/checkout@v2
      - name: install_git
        run: apt update && apt install -y git
      - name: build
        run: scripts/build_linux.sh dpc++

  build_macos_cpp:
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: prepare for cache restore
      run: |
        sudo mkdir -p /opt/intel
        sudo chown $USER /opt/intel
    - name: cache install
      id: cache-install
      uses: actions/cache@v2
      with:
        path: /opt/intel/oneapi
        key: install-${{ env.MACOS_HPCKIT_URL }}-${{ env.MACOS_CPP_COMPONENTS }}
    - name: install
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/install_macos.sh $MACOS_HPCKIT_URL $MACOS_CPP_COMPONENTS
    - name: build
      run: scripts/build_macos.sh c++

    # Delete the following if you don't want to save install logs
    - name: Saving install logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: InstallLogs_${{ github.job }}
        path: |
          bootstrapper*
          installer*
        retention-days: 7

  build_macos_fortran:
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: Prepare for cache restore
      run: |
        sudo mkdir -p /opt/intel
        sudo chown $USER /opt/intel
    - name: cache install
      id: cache-install
      uses: actions/cache@v2
      with:
        path: /opt/intel/oneapi
        key: install-${{ env.MACOS_HPCKIT_URL }}-${{ env.MACOS_FORTRAN_COMPONENTS }}
    - name: install
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/install_macos.sh $MACOS_HPCKIT_URL $MACOS_FORTRAN_COMPONENTS
    - name: build
      run: scripts/build_macos.sh fortran

    # Delete the following if you don't want to save install logs
    - name: Saving install logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: InstallLogs_${{ github.job }}
        path: |
          bootstrapper*
          installer*
        retention-days: 7
