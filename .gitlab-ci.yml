# SPDX-FileCopyrightText: 2020 Intel Corporation
#
# SPDX-License-Identifier: MIT

stages:
  - build

variables:
  WINDOWS_BASEKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/17191/w_BaseKit_b_2021.1.10.2260_offline.exe
  WINDOWS_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/17163/w_HPCKit_b_2021.1.10.2266_offline.exe
  MACOS_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/17230/m_HPCKit_b_2021.1.10.2260.dmg
  WINDOWS_CPP_COMPONENTS: intel.oneapi.win.cpp-compiler
  WINDOWS_FORTRAN_COMPONENTS: intel.oneapi.win.ifort-compiler
  WINDOWS_DPCPP_COMPONENTS: intel.oneapi.win.dpcpp-compiler
  LINUX_CPP_COMPONENTS: intel-oneapi-dpcpp-cpp-compiler-pro
  LINUX_FORTRAN_COMPONENTS: intel-oneapi-ifort
  LINUX_DPCPP_COMPONENTS: intel-oneapi-dpcpp-cpp-compiler
  MACOS_CPP_COMPONENTS: intel.oneapi.mac.cpp-compiler
  MACOS_FORTRAN_COMPONENTS: intel.oneapi.mac.ifort-compiler

.shared_windows_runners:
  tags:
  - shared-windows
  - windows
  - windows-1809

build_windows_cpp:
  extends:
  - .shared_windows_runners
  stage: build
  cache:
    key:
      files:
        - scripts/cache_exclude_windows.ps1
    paths: 
      - cache
  before_script:
    - |
        if(Test-Path cache) {
          New-Item -ItemType "directory" -Path "C:\Program Files (x86)\Intel\oneAPI" -Force
          Move-Item -Path cache\compiler -Destination "C:\Program Files (x86)\Intel\oneAPI"
        } else {
          scripts/install_windows.bat $WINDOWS_HPCKIT_URL $WINDOWS_CPP_COMPONENTS
        }
  script:
    - scripts/build_windows.bat c++ 2019_build_tools
  after_script:
    - |
        if(!(Test-Path cache)) {
          scripts/cache_exclude_windows.ps1
          New-Item -ItemType "directory" -Path "cache"
          Move-Item -Path "C:\Program Files (x86)\Intel\oneAPI\compiler" -Destination "cache"
        }

  # Delete the following if you don't want to save install logs
  artifacts:
    when: always
    paths:
      - extract.log
      - bootstrapper*
      - installer*
    expire_in: 1 week

build_windows_fortran:
  extends:
  - .shared_windows_runners
  stage: build
  cache:
    key:
      files:
        - scripts/cache_exclude_windows.ps1
    paths: 
      - cache
  before_script:
    - |
        if(Test-Path cache) {
          New-Item -ItemType "directory" -Path "C:\Program Files (x86)\Intel\oneAPI" -Force
          Move-Item -Path cache\compiler -Destination "C:\Program Files (x86)\Intel\oneAPI"
        } else {
          scripts/install_windows.bat $WINDOWS_HPCKIT_URL $WINDOWS_FORTRAN_COMPONENTS
        }
  script:
    - scripts/build_windows.bat fortran 2019_build_tools
  after_script:
    - |
        if(!(Test-Path cache)) {
          scripts/cache_exclude_windows.ps1
          New-Item -ItemType "directory" -Path "cache"
          Move-Item -Path "C:\Program Files (x86)\Intel\oneAPI\compiler" -Destination "cache"
        }

  # Delete the following if you don't want to save install logs
  artifacts:
    when: always
    paths:
      - extract.log
      - bootstrapper*
      - installer*
    expire_in: 1 week

build_windows_dpcpp:
  extends:
  - .shared_windows_runners
  stage: build
  script:
    - scripts/install_windows.bat $WINDOWS_BASEKIT_URL $WINDOWS_DPCPP_COMPONENTS
    - scripts/build_windows.bat dpc++ 2019_build_tools

  # Delete the following if you don't want to save install logs
  artifacts:
    when: always
    paths:
      - extract.log
      - bootstrapper*
      - installer*
    expire_in: 1 week

build_linux_apt_cpp:
  image: ubuntu:latest
  stage: build
  cache:
    key:
      prefix: test-2021.1-beta10-${LINUX_CPP_COMPONENTS}-compiler
      files:
        - scripts/cache_exclude_linux_no_sudo.sh
    paths: 
      - cache
  before_script:
    - |
        if [[ -d cache ]]
        then
          mkdir -p /opt/intel/oneapi
          mv cache/compiler /opt/intel/oneapi/
        else
          . scripts/install_prerequisites_linux_apt_no_sudo.sh
          . scripts/setup_apt_repo_linux_no_sudo.sh
          . scripts/install_linux_apt_no_sudo.sh $LINUX_CPP_COMPONENTS
        fi
  script:
    - scripts/build_linux.sh c++
  after_script:
    - |
        if [[ ! -d cache ]]
        then
          . scripts/cache_exclude_linux_no_sudo.sh
          mkdir cache
          mv /opt/intel/oneapi/compiler cache
        fi

build_linux_apt_fortran:
  image: ubuntu:latest
  stage: build
  cache:
    key:
      prefix: test-2021.1-beta10-${LINUX_FORTRAN_COMPONENTS}-compiler
      files:
        - scripts/cache_exclude_linux_no_sudo.sh
    paths: 
      - cache
  before_script:
    - |
        if [[ -d cache ]]
        then
          mkdir -p /opt/intel/oneapi
          mv cache/compiler /opt/intel/oneapi/
        else
          . scripts/install_prerequisites_linux_apt_no_sudo.sh
          . scripts/setup_apt_repo_linux_no_sudo.sh
          . scripts/install_linux_apt_no_sudo.sh $LINUX_FORTRAN_COMPONENTS
        fi
  script:
    - scripts/build_linux.sh fortran
  after_script:
    - |
        if [[ ! -d cache ]]
        then
          . scripts/cache_exclude_linux_no_sudo.sh
          mkdir cache
          mv /opt/intel/oneapi/compiler cache
        fi

build_linux_apt_dpcpp:
  image: ubuntu:latest
  stage: build
  cache:
    key:
      prefix: test-2021.1-beta10-${LINUX_DPCPP_COMPONENTS}-compiler
      files:
        - scripts/cache_exclude_linux_no_sudo.sh
    paths: 
      - cache
  before_script:
    - |
        if [[ -d cache ]]
        then
          mkdir -p /opt/intel/oneapi
          mv cache/compiler /opt/intel/oneapi/
          mv cache/tbb /opt/intel/oneapi/
        else
          . scripts/install_prerequisites_linux_apt_no_sudo.sh
          . scripts/setup_apt_repo_linux_no_sudo.sh
          . scripts/install_linux_apt_no_sudo.sh $LINUX_DPCPP_COMPONENTS
        fi
  script:
    - scripts/build_linux.sh dpc++
  after_script:
    - |
        if [[ ! -d cache ]]
        then
          . scripts/cache_exclude_linux_no_sudo.sh
          mkdir cache
          mv /opt/intel/oneapi/compiler cache
          mv /opt/intel/oneapi/tbb cache
        fi
